/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.cobi.kggseq.controller;

import cern.colt.list.DoubleArrayList;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.List;
import java.util.Map;
import org.apache.log4j.Logger;
import org.cobi.kggseq.entity.Individual;
import org.cobi.kggseq.entity.Variant;

/**
 *
 * @author mxli
 */
public class RVTest {

    private static final Logger LOG = Logger.getLogger(RVTest.class);
    String rvtestFolder;
    String inputFileFolder;

    public RVTest(String rvtestFolder, String inputFileFolder) {
        this.rvtestFolder = rvtestFolder;
        this.inputFileFolder = inputFileFolder;
    }

    public void runBGzip(String bgizpFolder, String chrName) {
        try {
            File f = new File(inputFileFolder);
            if (!f.getParentFile().exists()) {
                f.getParentFile().mkdir();
            }
            String cmd = bgizpFolder + "bgzip -d " + inputFileFolder + ".flt.vcf.gz";
            Process pr = Runtime.getRuntime().exec(cmd);

            String line;

            try {
                BufferedReader inputError = new BufferedReader(new InputStreamReader(pr.getErrorStream()));
                while (((line = inputError.readLine()) != null)) {
                    //  System.out.println(line);
                }

                int exitVal = pr.waitFor();
                pr.destroy();
                inputError.close();

                if (exitVal != 0) {

                    LOG.info("bgzip failed to run.");
                }
            } catch (Exception ex) {
                LOG.error(ex);
            }

        } catch (IOException ex) {
            LOG.error(ex);
        } catch (Exception ex) {
            LOG.error(ex);
        }

    }

    //example command
    //plugin/rvtests/executable/rvtest --inVcf test1.flt.vcf.gz --pheno assoc.ped --out output --setFile test1.gene.rvtest.grp.gz --burden cmc --vt price --kernel skat[nPerm=100:alpha=0.001:beta1=1:beta2=20],kbac
    public void runGeneAssoc(String phenoFilePath, String chrName) {
        try {
            File f = new File(inputFileFolder);
            if (!f.getParentFile().exists()) {
                f.getParentFile().mkdir();
            }
            String[] params = new String[13];
            params[0] = rvtestFolder;
            params[1] = " --inVcf";
            params[2] = inputFileFolder + ".flt.vcf.gz";
            params[3] = "--pheno";
            params[4] = phenoFilePath;
            params[5] = "--setFile";
            params[6] = inputFileFolder + ".chr" + chrName + ".gene.rvtest.grp.gz";
            params[7] = "--out";
            params[8] = inputFileFolder + ".chr" + chrName;
            params[9] = "--burden";
            params[10] = "cmc";
            params[11] = "--kernel";
            params[12] = "skat[nPerm=100:alpha=0.001:beta1=1:beta2=20],kbac";

            Process pr = Runtime.getRuntime().exec(params);

            String line;

            try {
                BufferedReader inputError = new BufferedReader(new InputStreamReader(pr.getErrorStream()));
                while (((line = inputError.readLine()) != null)) {
                    //  System.out.println(line);
                }

                int exitVal = pr.waitFor();
                pr.destroy();
                inputError.close();

                if (exitVal != 0) {
                    StringBuilder comInfor = new StringBuilder();
                    for (String param : params) {
                        comInfor.append(param);
                        comInfor.append(" ");
                    }
                    LOG.info("Rvtest failed to run by the command: " + comInfor.toString());
                }
            } catch (Exception ex) {
                LOG.error(ex);
            }

        } catch (IOException ex) {
            LOG.error(ex);
        } catch (Exception ex) {
            LOG.error(ex);
        }

    }

    public void runGenesetAssoc(Map<String, List<Variant>> geneVars, List<Individual> subjectList, int[] pedEncodeGytIDMap, boolean isPhased, int intNT, DoubleArrayList[] pvList) {

    }
}
